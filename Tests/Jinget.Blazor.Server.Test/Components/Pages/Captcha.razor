@page "/captcha"
@using Jinget.Blazor.Components.Captcha
@using static Jinget.Blazor.Components.Captcha.JingetCaptcha
<style>
    .divCaptcha > img {
        vertical-align: unset !important;
    }
</style>
<div class="container">
    English Captcha
    <div class="row">
        <div class="form-group input-group">
            <JingetCaptcha @ref=captcha1
                           Width="200"
                           Height="50"
                           CharCount="5"
                           CharSetType="CharSetTypeOptions.EnglishCharsPlusDigit"
                           ContentCaseSensitivity="CharSetCaseSensitivityOptions.IgnoreCase"
                           CaseSesitiveComparison=false>
            </JingetCaptcha>
            <input type="text" class="form-control" id="captcha" @bind-value="@captcha1Value" />
            <button @onclick="IsValid_Captcha1" class="btn btn-primary">Validate</button>
        </div>
    </div>
    <div class="row">
        <div class="form-group input-group">
            <label>@captcha1ValidationResult</label>
        </div>
    </div>
    <hr />
    Farsi Captcha
    <div class="row">
        <div class="form-group input-group">
            <JingetCaptcha @ref=captcha2
                           Width="200"
                           Height="50"
                           CharCount="5"
                           CharSetType="CharSetTypeOptions.FarsiCharsOnly"
                           IsRtlCharSet=true>
            </JingetCaptcha>
            <input type="text" class="form-control" id="captcha" @bind-value="@captcha2Value" />
            <button @onclick="IsValid_Captcha2" class="btn btn-primary">Validate</button>
        </div>
    </div>
    <div class="row">
        <div class="form-group input-group">
            <label>@captcha2ValidationResult</label>
        </div>
    </div>
    <hr />
    Custom charset Captcha
    <div class="row">
        <div class="form-group input-group">
            <JingetCaptcha @ref=captcha3
                           Width="200"
                           Height="50"
                           CharCount="5"
                           CharSetType="CharSetTypeOptions.Custom"
                           CustomCharSet="אבגדהחטש"
                           IsRtlCharSet=true
                           FontFamilies=@(new string[]{"Calibri"})>
            </JingetCaptcha>
            <input type="text" class="form-control" id="captcha" @bind-value="@captcha3Value" />
            <button @onclick="IsValid_Captcha3" class="btn btn-primary">Validate</button>
        </div>
    </div>
    <div class="row">
        <div class="form-group input-group">
            <label>@captcha3ValidationResult</label>
        </div>
    </div>
    <hr />
    English Captcha with callback
    <div class="row">
        <div class="form-group input-group">
            <JingetCaptcha @ref=captcha4
                           CharCount="5"
                           CaptchaChanged="OnCaptchaChanged">
            </JingetCaptcha>
            <input type="text" class="form-control" id="captcha" @bind-value="@captcha4Value" />
            <button @onclick="IsValid_Captcha4" class="btn btn-primary">Validate</button>
        </div>
    </div>
    <div class="row">
        <div class="form-group input-group">
            <label>@captcha4Message</label>
            <label>@captcha4ValidationResult</label>
        </div>
    </div>
</div>
@code {
string? captcha1Value;
string? captcha2Value;
string? captcha3Value;
string? captcha4Value;

JingetCaptcha? captcha1;
JingetCaptcha? captcha2;
JingetCaptcha? captcha3;
JingetCaptcha? captcha4;

string? captcha1ValidationResult;
string? captcha2ValidationResult;
string? captcha3ValidationResult;
string? captcha4ValidationResult;
string? captcha4Message;


async Task IsValid_Captcha1()
{
    if (captcha1.IsValid(captcha1Value))
    {
        captcha1ValidationResult = "You entered the valid value:-)";
    }
    else
    {
        captcha1ValidationResult = "You entered the invalid value:-(";
        await captcha1.GetNewCaptchaAsync();
    }
}

void IsValid_Captcha2()
{
    if (captcha2.IsValid(captcha2Value))
    {
        captcha2ValidationResult = "You entered the valid value:-)";
    }
    else
    {
        captcha2ValidationResult = "You entered the invalid value:-(";
    }
}
void IsValid_Captcha3()
{
    if (captcha3.IsValid(captcha3Value))
    {
        captcha3ValidationResult = "You entered the valid value:-)";
    }
    else
    {
        captcha3ValidationResult = "You entered the invalid value:-(";
    }
}
void IsValid_Captcha4()
{
    if (captcha4.IsValid(captcha4Value))
    {
        captcha4ValidationResult = "You entered the valid value:-)";
    }
    else
    {
        captcha4ValidationResult = "You entered the invalid value:-(";
    }
}
void OnCaptchaChanged()
{
    if (captcha4 != null)
    {
        captcha4Message = $"this is callback called from captcha4 when captcha image is changed";
    }
}
}