@page "/table"
@using Jinget.Blazor.Components.Table
@using Jinget.Blazor.Components.Popup
@using Jinget.Blazor.Models.JingetTable
@using Jinget.Blazor.Services
@using Jinget.Blazor.Attributes
@using Jinget.Core.Enumerations;
@using Jinget.Core.ExtensionMethods.Collections;
@using MudBlazor

<JingetMessageBox @ref=@messageBox ShowVerboseFuncAsync=@(async()=>true)></JingetMessageBox>

<JingetTable Id="tblSampleFarsi" Model=@ModelFarsi
             OnDataBind="BindDataFarsi"
             OnRowSelected="@((SampleDataFarsi e)=>RowSelected(e))"
             RowIsSelectable=true
             ShowSelectedRowInBadgeBar=true>
    <NoRecordContent>رکوردی وجود ندارد</NoRecordContent>
    <PreActionContent>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Success">
            <MudText>Pre Sample</MudText>
        </MudButton>
    </PreActionContent>
    <PostActionContent>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary">
            <MudText>Post Sample</MudText>
        </MudButton>
    </PostActionContent>
</JingetTable>
<hr />


<JingetTable Id="tblSampleEng" Model=@ModelEng
             OnDataBind="BindDataEng"
             FirstPageText="<<"
             PrevPageText="<"
             LastPageText=">>"
             NextPageText=">"
             RowsPerPageText="Per page:"
             AllItemsText="All"
             AscendingSortText="Ascending"
             DescendingSortText="Descending"
             PageInfoTextFormat="{first_item}-{last_item} FROM {all_items}"
             SearchBadgeTextFormat="FILTERED BY:"
             SearchPlaceHolderText="Search"
             SelectedRowBadgeTextFormat="SELECTED ROW:"
             SortBadgeTextFormat="SORTED BY: {sort_col} {sort_dir}"
             IsRtl=false
             ShowBadgeBar=true
             PaginationPageSizeOptions=[5,10,20,30,40]>
    <NoRecordContent>No record found!</NoRecordContent>
    <PreActionContent>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Success">
            <MudText>Pre Sample</MudText>
        </MudButton>
    </PreActionContent>
    <PostActionContent>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary">
            <MudText>Post Sample</MudText>
        </MudButton>
    </PostActionContent>
</JingetTable>

@code {
    JingetMessageBox? messageBox;
    JingetTableModel<SampleDataFarsi>? ModelFarsi;
    JingetTableModel<SampleDataEng>? ModelEng;

    async Task RowSelected(SampleDataFarsi? e)
    {
        if (e != null)
        {
            await messageBox.ShowInfoAsync(
            e.Id.ToString(),
            $"{e.Name} {e.LastName}",
            System.Text.Json.JsonSerializer.Serialize(e), rtl: true);
        }
    }

    void BindDataFarsi(JingetTableDataBindModel e)
    {
        var data = GetDataFarsi()
                .Where(x => string.IsNullOrWhiteSpace(e.SearchTerm) || x.Name.StartsWith(e.SearchTerm) || x.LastName.StartsWith(e.SearchTerm))
                .AsQueryable();
        var items = data
                    .OrderByDynamic(e.SortColumn, e.SortDirection)
                    .Skip((e.PageIndex - 1) * e.PageSize)
                    .Take(e.PageSize)
                    .ToList();
        ModelFarsi = new JingetTableModel<SampleDataFarsi>(items, data.Count());
        StateHasChanged();
    }
    void BindDataEng(JingetTableDataBindModel e)
    {
        var data = GetDataEng()
                .Where(x => string.IsNullOrWhiteSpace(e.SearchTerm) || x.Name.StartsWith(e.SearchTerm) || x.LastName.StartsWith(e.SearchTerm))
                .AsQueryable();
        var items = data
                    .OrderByDynamic(e.SortColumn, e.SortDirection)
                    .Skip((e.PageIndex - 1) * e.PageSize)
                    .Take(e.PageSize)
                    .ToList();
        ModelEng = new JingetTableModel<SampleDataEng>(items, data.Count());
        StateHasChanged();
    }

    async Task ShowDetailFarsi(SampleDataFarsi data)
    {
        await messageBox.ShowInfoAsync(
        data.Id.ToString(),
        $"{data.Name} {data.LastName}",
        System.Text.Json.JsonSerializer.Serialize(data), rtl: true);
    }

    List<SampleDataFarsi> GetDataFarsi()
    {
        return new List<SampleDataFarsi>
            {
                new SampleDataFarsi(1,"وحید","فرهمندیان",34,true),
                new SampleDataFarsi(2,"علی","احمدی",40,true),
                new SampleDataFarsi(3,"محسن","نوروزی",18,true),
                new SampleDataFarsi(4,"قانعی","مریم",24,false),
                new SampleDataFarsi(5,"سارا","حسین زاده",37,false),
                new SampleDataFarsi(6,"امیر","رحمانی",29,true),
                new SampleDataFarsi(7,"سید رحمان","رئوفی اصل",54,true),
                new SampleDataFarsi(8,"سامان","صادقی",41,true),
                new SampleDataFarsi(9,"ابوالفضل","بهنام پور",19,true),
                new SampleDataFarsi(10,"ژاله","علیزاده",38,false),
                new SampleDataFarsi(11,"سیدرضا","ابوالفتحی",47,false),
                new SampleDataFarsi(12,"مهتاب","آسمانی",26,true),
                new SampleDataFarsi(13,"ستاره","فضائی",71,true),
                new SampleDataFarsi(14,"رامین","عسکری",30,false),
                new SampleDataFarsi(15,"المیرا","طباطبائی",25,true),
                new SampleDataFarsi(16,"یاسین","حسن زاده",31,false),
                new SampleDataFarsi(17,"یاسی","حسین خانی",18,false),
                new SampleDataFarsi(18,"حسن","محمدپور",24,true),
                new SampleDataFarsi(19,"امیررضا","پورعلی",34,true),
                new SampleDataFarsi(20,"سیدعلی محمد","شمسی",40,true),
                new SampleDataFarsi(21,"رامیت","رضائی",18,true),
                new SampleDataFarsi(22,"مریم","نریمان نژاد",24,false),
                new SampleDataFarsi(23,"نازی","میرصادق زاده هاشمی",37,false),
                new SampleDataFarsi(24,"ساسان","شهاب الدین",29,true),
                new SampleDataFarsi(25,"حمیدرضا","قنبرزاده",54,true),
                new SampleDataFarsi(26,"قاسم","صمدپور",41,true),
                new SampleDataFarsi(27,"عبدالله","محمدعلی نژاد",19,true),
                new SampleDataFarsi(28,"یوسف","نزاکت خواه",38,false),
                new SampleDataFarsi(29,"غلامعلی","سماواتی",47,false),
                new SampleDataFarsi(30,"آفتاب","روشنایی",26,true),
                new SampleDataFarsi(31,"زهره","خانی زاده",71,true),
                new SampleDataFarsi(32,"نعیم","یزدانی",30,false),
                new SampleDataFarsi(33,"سجاد","حسینی",25,true),
                new SampleDataFarsi(34,"مهراد","نکونام",31,false),
                new SampleDataFarsi(35,"سامان","گل محمدی",18,false),
                new SampleDataFarsi(36,"مژگان","سوخته سرائی",24,true),
                new SampleDataFarsi(37,"امیررضا","پورعلی",34,true),
                new SampleDataFarsi(38,"سیدعلی محمد","شمسی",40,true),
                new SampleDataFarsi(39,"رامیت","رضائی",18,true),
                new SampleDataFarsi(40,"مریم","نریمان نژاد",24,false),
                new SampleDataFarsi(41,"نازی","میرصادق زاده هاشمی",37,false),
                new SampleDataFarsi(42,"ساسان","شهاب الدین",29,true),
                new SampleDataFarsi(43,"حمیدرضا","قنبرزاده",54,true),
                new SampleDataFarsi(44,"قاسم","صمدپور",41,true),
                new SampleDataFarsi(45,"عبدالله","محمدعلی نژاد",19,true),
                new SampleDataFarsi(46,"یوسف","نزاکت خواه",38,false),
                new SampleDataFarsi(47,"غلامعلی","سماواتی",47,false),
                new SampleDataFarsi(48,"آفتاب","روشنایی",26,true),
                new SampleDataFarsi(49,"زهره","خانی زاده",71,true),
                new SampleDataFarsi(50,"نعیم","یزدانی",30,false),
                new SampleDataFarsi(51,"سجاد","حسینی",25,true),
                new SampleDataFarsi(52,"مهراد","نکونام",31,false),
                new SampleDataFarsi(53,"سامان","گل محمدی",18,false),
                new SampleDataFarsi(54,"مژگان","سوخته سرائی",24,true)
            };
    }

    List<SampleDataEng> GetDataEng()
    {
        return new List<SampleDataEng>
            {
                new SampleDataEng(1,"Vahid","Farahmandian",34,true),
                new SampleDataEng(2,"Ali","Ahmadi",40,true),
                new SampleDataEng(3,"Mohsen","Nowroozi",18,true),
                new SampleDataEng(4,"Maryam","Ghane'ei",24,false),
                new SampleDataEng(5,"Sara","Hosseinzadeh",37,false),
                new SampleDataEng(6,"Amir","Rahmani",29,true),
                new SampleDataEng(7,"Seyed Rahman","Raoofi Asl",54,true),
                new SampleDataEng(8,"Saman","Sadeghi",41,true),
                new SampleDataEng(9,"Aboalfazl","Behnampour",19,true),
                new SampleDataEng(10,"Zhale","Alizadeh",38,false),
                new SampleDataEng(11,"Seyedreza","Aboalfathi",47,false),
                new SampleDataEng(12,"Mahtab","Asemani",26,true),
                new SampleDataEng(13,"Setareh","Fazaei",71,true),
                new SampleDataEng(14,"Ramin","Askari",30,false),
                new SampleDataEng(15,"Elmira","Tabatabaei",25,true),
                new SampleDataEng(16,"Yasin","Hassanzadeh",31,false),
                new SampleDataEng(17,"Yasi","Hosseinkhani",18,false),
                new SampleDataEng(18,"Hassan","Mohammadpour",24,true),
                new SampleDataEng(19,"Amirreza","PoorAli",34,true),
                new SampleDataEng(20,"Seyed Ali Mohammad","Shamsi",40,true),
                new SampleDataEng(21,"Ramin","Rezaei",18,true),
                new SampleDataEng(22,"Maryam","Narimannezhad",24,false)
            };
    }

    [JingetTableElement]
    public class SampleDataFarsi
    {
        public SampleDataFarsi(int id, string name, string lastname, int age, bool isActive)
        {
            Id = id;
            Name = name;
            LastName = lastname;
            Age = age;
            IsActive = isActive;
        }

        [JingetTableMember(DisplayName = "#")]
        public int Id { get; set; }

        [JingetTableMember(DisplayName = "نام", Sortable = true)]
        public string Name { get; set; }

        [JingetTableMember(DisplayName = "نام خانوادگی", Sortable = true)]
        public string LastName { get; set; }

        [JingetTableMember(DisplayName = "سن", Sortable = true)]
        public int Age { get; set; }

        [JingetTableMember(DisplayName = "وضعیت")]
        public bool IsActive { get; set; }
    }
    [JingetTableElement]
    public class SampleDataEng
    {
        public SampleDataEng(int id, string name, string lastname, int age, bool isActive)
        {
            Id = id;
            Name = name;
            LastName = lastname;
            Age = age;
            IsActive = isActive;
        }

        [JingetTableMember(DisplayName = "#")]
        public int Id { get; set; }

        [JingetTableMember(DisplayName = "Name")]
        public string Name { get; set; }

        [JingetTableMember(DisplayName = "Lastname")]
        public string LastName { get; set; }

        [JingetTableMember(DisplayName = "Age", Sortable = true)]
        public int Age { get; set; }

        [JingetTableMember(DisplayName = "Status")]
        public bool IsActive { get; set; }
    }

}