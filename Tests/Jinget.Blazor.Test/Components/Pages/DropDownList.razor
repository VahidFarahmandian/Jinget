@page "/dropdownlist"
@using Jinget.Blazor.Components.DropDownList
@using Jinget.Blazor.Components.Popup
@using Jinget.Blazor.Models
@using Jinget.Blazor.Services.Contracts
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor

@inject ILocalStorageService localStorage

<JingetMessageBox @ref=@messageBox
                  ShowVerboseFuncAsync=@(async ()=>await Task.FromResult<bool>(true))></JingetMessageBox>
<h3>JingetDropDownList</h3>
Sample 01: Required
<JingetDropDownList @ref=@ddlSample1
                    Id="ddlSample1"
                    DataProviderFunc=@GetData
                    DefaultText="---Choose---"
                    NoResultText="Search returns NO element"
                    SearchPlaceholderText="...Search..."
                    HelperText="This is sample drop down list"
                    DisplayName="DDLSample"
                    IsRequired="true"
                    OnChange=@OnChange1></JingetDropDownList>
Sample 02: Data Bound
<CascadingAuthenticationState>
    <Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
        <NotAuthorized>
            <JingetDropDownList @ref=ddlSample2
                                Id="ddlSample2"
                                IsSearchable="true"
                                DataProviderFunc=@GetData
                                DefaultText="--Choose---"
                                OnChange=@OnChange2
                                OnDataBound="ddlSample2_DataBound"
                                OnRendered="ddlSample2_Rendered">
            </JingetDropDownList>
        </NotAuthorized>
    </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
</CascadingAuthenticationState>
<hr />
Sample 03: Change Selected Item(get from localstorage)
<JingetDropDownList @ref=ddlSample3
                    Id="ddlSample3"
                    IsSearchable="true"
                    IsRtl="true"
                    NoResultText="No Data Found!"
                    SearchPlaceholderText="...Search..."
                    DataProviderFunc=@GetDataPersian
                    DefaultText="--Choose---"
                    OnChange=@OnChange3>
</JingetDropDownList>

<hr />
Sample 04: Change Selected Item(On button click)
<JingetDropDownList @ref=ddlSample4
                    Id="ddlSample4"
                    IsSearchable=true
                    DataProviderFunc=@GetData
                    DefaultText="--Choose---"
                    OnChange=@OnChange4>
</JingetDropDownList>
<MudButton FullWidth=true
           OnClick="SetSelectedItem"
           Variant="Variant.Filled"
           Color="Color.Primary">
    <MudText>Select</MudText>
</MudButton>
<MudButton FullWidth=true
           OnClick="ClearSelection"
           Variant="Variant.Filled"
           Color="Color.Primary">
    <MudText>Clear Selection</MudText>
</MudButton>
<hr />
Sample 05: Set selected index: (SelectedIndex: @selectedIndexSearch)
<JingetDropDownList @ref=ddlSample5
                    Id="ddlSample5"
                    IsSearchable=true
                    DataProviderFunc=@GetData
                    DefaultText="--Choose---"
                    OnChange=@OnChange5>
</JingetDropDownList>
<MudButton FullWidth=true
           OnClick="SetSelectedIndex"
           Variant="Variant.Filled"
           Color="Color.Primary">
    <MudText>Select</MudText>
</MudButton>
<hr />
Sample 06: Disabled
<JingetDropDownList Id="ddlSampleDisabled"
                    DataProviderFunc=@GetData
                    DefaultText="--Choose---"
                    IsDisabled="true">
</JingetDropDownList>
<hr />
Sample 07: Guid Code
<JingetDropDownList @ref=ddlSample6
                    Id="ddlSample6"
                    DataProviderFunc=@GetDataGuid
                    DefaultText="--Choose---"
                    OnChange=@OnChange6>
</JingetDropDownList>
@code {

    JingetMessageBox? messageBox;
    JingetDropDownList ddlSample1;
    JingetDropDownList ddlSample2;
    JingetDropDownList ddlSample3;
    JingetDropDownList ddlSample4;
    JingetDropDownList ddlSample5;
    JingetDropDownList ddlSample6;

    int selectedIndexSearch;

    async Task<List<JingetDropDownItemModel>> GetData() => await Task.FromResult(new List<JingetDropDownItemModel>
    {
    new JingetDropDownItemModel(1,"Iran"),
    new JingetDropDownItemModel(2,"USA"),
    new JingetDropDownItemModel(3,"UK"),
    new JingetDropDownItemModel(4,"Russia"),
    new JingetDropDownItemModel(5,"Canada"),
    new JingetDropDownItemModel(6,"China")});
    async Task<List<JingetDropDownItemModel>> GetDataGuid() => await Task.FromResult(new List<JingetDropDownItemModel>
    {
    new JingetDropDownItemModel(Guid.NewGuid(),"Iran"),
    new JingetDropDownItemModel(Guid.NewGuid(),"USA"),
    new JingetDropDownItemModel(Guid.NewGuid(),"UK"),
    new JingetDropDownItemModel(Guid.NewGuid(),"Russia"),
    new JingetDropDownItemModel(Guid.NewGuid(),"Canada"),
    new JingetDropDownItemModel(Guid.NewGuid(),"China")});
    async Task<List<JingetDropDownItemModel>> GetDataPersian() => await Task.FromResult(new List<JingetDropDownItemModel>
    {
    new JingetDropDownItemModel(1,"ایران"),
    new JingetDropDownItemModel(2,"ایالات متحده آمریکا"),
    new JingetDropDownItemModel(3,"انگلستان"),
    new JingetDropDownItemModel(4,"روسیه"),
    new JingetDropDownItemModel(5,"کانادا"),
    new JingetDropDownItemModel(6,"جمهوری خلق چین")});

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await localStorage.SetItemAsync("selectedItem", new Random().Next(1, 6).ToString());
            await ddlSample3.SetSelectedItemAsync(await localStorage.GetItemAsync("selectedItem"));
        }
    }
    public async Task ddlSample2_DataBound()
    {
    }
    public async Task ddlSample2_Rendered() => await ddlSample2.SetSelectedIndexAsync(new Random().Next(1, 6));
    public async Task OnChange1(ChangeEventArgs e) => await messageBox.ShowInfoAsync("ddlSample1", "Selected Item Changed", Newtonsoft.Json.JsonConvert.SerializeObject(ddlSample1.SelectedItem));
    public async Task OnChange2(ChangeEventArgs e) => await messageBox.ShowInfoAsync("ddlSample2", "Selected Item Changed", Newtonsoft.Json.JsonConvert.SerializeObject(ddlSample2.SelectedItem));
    public async Task OnChange3(ChangeEventArgs e) => await messageBox.ShowInfoAsync("ddlSample3", "Selected Item Changed", Newtonsoft.Json.JsonConvert.SerializeObject(ddlSample3.SelectedItem));
    public async Task OnChange4(ChangeEventArgs e) => await messageBox.ShowInfoAsync("ddlSample4", "Selected Item Changed", Newtonsoft.Json.JsonConvert.SerializeObject(ddlSample4.SelectedItem));
    public async Task OnChange5(ChangeEventArgs e) => await messageBox.ShowInfoAsync("ddlSample5", "Selected Item Changed", Newtonsoft.Json.JsonConvert.SerializeObject(ddlSample5.SelectedItem));
    public async Task OnChange6(ChangeEventArgs e) => await messageBox.ShowInfoAsync("ddlSample6", "Selected Item Changed", Newtonsoft.Json.JsonConvert.SerializeObject(ddlSample6.SelectedItem));
    public async Task SetSelectedItem() => await ddlSample4.SetSelectedItemAsync(new Random().Next(1, 6).ToString());
    public async Task ClearSelection() => await ddlSample4.SetSelectedItemAsync(null);
    public async Task SetSelectedIndex()
    {
        selectedIndexSearch = new Random().Next(0, 6);
        await ddlSample5.SetSelectedIndexAsync(selectedIndexSearch);
    }
}
