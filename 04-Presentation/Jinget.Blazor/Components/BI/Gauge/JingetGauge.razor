@using Jinget.Blazor.Components.Input

@inherits             JingetGaugeBase;

<div style="width:fit-content; margin-bottom:30px">
    <div class="text-center"><span>@DisplayName</span></div>
    <div id="@Id" disabled="@IsDisabled" class="gauge-wrap @CssClass" data-value="@Value">
        @if (ShowValueAsText)
        {
            <div style="font-family:IranSans;font-size:25px; width: 100%;display: flex;justify-content: center;align-items: center;position: relative;margin-top: -33px;z-index: 9;">
                <span>@Value</span>
            </div>
        }
        <div class="text-center">
            <small>@HelperText</small>
        </div>
    </div>
</div>

@if (IsRequired && Value == null)
{
    <label style="color:red">@RequiredError</label>
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("toJingetGauge",
                new
                {
                    dotnet = DotNetObjectReference.Create(this),
                    Id,
                    Width,
                    HueLow,
                    HueHigh,
                    Saturation,
                    Lightness,
                    GaugeBackGroundColor,
                    GaugeParentElementGroundColor
                });
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}