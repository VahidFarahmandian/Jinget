@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@inherits JingetDropDownListBase;

@if (connected)
{
    <select id="@Id"
            class="@CssClass"
            disabled="@IsDisabled"
            required="@IsRequired">
        <option value="">@DefaultText</option>
        @foreach (var item in Items)
        {
            bool selected = item.Value != null && Value != null && item.Value.ToString().Equals(Value.ToString());
            if (selected)
            {
                Task.Run(() =>
                {
                    JS.InvokeVoidAsync("jinget_blazor_dropdownlist_selectItem", Id, Value).GetAwaiter().GetResult();
                });
            }
            <option value="@item.Value" selected="@selected">@item.Text</option>
        }
        @if (Value == null)
        {
            Task.Run(() =>
            {
                JS.InvokeVoidAsync("jinget_blazor_dropdownlist_clear", Id).GetAwaiter().GetResult();
            });
        }
    </select>
    @if (IsRequired && (SelectedItem == null || string.IsNullOrWhiteSpace(SelectedItem.Value?.ToString())))
    {
        <label style="color:red">@RequiredError</label>
    }
}
@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_initialized)
        {
            //initialize drop down list by calling initJingetDropDownList. this functionality is mainly powered by select2.js library.
            await InitComponentAsync("initJingetDropDownList");
            await base.OnAfterRenderAsync(firstRender);
        }
    }
}